// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.14.0
// source: uploadfile.proto

package uploadfile

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 快传
type FastLoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMd5   string `protobuf:"bytes,1,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`        // 文件MD5
	FileName  string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`     // 文件名称
	FileSize  int64  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`    // 文件大小
	IsChunked bool   `protobuf:"varint,4,opt,name=is_chunked,json=isChunked,proto3" json:"is_chunked,omitempty"` // 是否分片
	ChunkSize int64  `protobuf:"varint,5,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"` // 分片大小
}

func (x *FastLoadRequest) Reset() {
	*x = FastLoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadfile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastLoadRequest) ProtoMessage() {}

func (x *FastLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uploadfile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastLoadRequest.ProtoReflect.Descriptor instead.
func (*FastLoadRequest) Descriptor() ([]byte, []int) {
	return file_uploadfile_proto_rawDescGZIP(), []int{0}
}

func (x *FastLoadRequest) GetFileMd5() string {
	if x != nil {
		return x.FileMd5
	}
	return ""
}

func (x *FastLoadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FastLoadRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FastLoadRequest) GetIsChunked() bool {
	if x != nil {
		return x.IsChunked
	}
	return false
}

func (x *FastLoadRequest) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type FastLoadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFastload bool `protobuf:"varint,1,opt,name=is_fastload,json=isFastload,proto3" json:"is_fastload,omitempty"`
}

func (x *FastLoadResponse) Reset() {
	*x = FastLoadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadfile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastLoadResponse) ProtoMessage() {}

func (x *FastLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uploadfile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastLoadResponse.ProtoReflect.Descriptor instead.
func (*FastLoadResponse) Descriptor() ([]byte, []int) {
	return file_uploadfile_proto_rawDescGZIP(), []int{1}
}

func (x *FastLoadResponse) GetIsFastload() bool {
	if x != nil {
		return x.IsFastload
	}
	return false
}

type PreSignMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresignUrl string `protobuf:"bytes,1,opt,name=presign_url,json=presignUrl,proto3" json:"presign_url,omitempty"`  // 预签名 URL
	PartNumber int32  `protobuf:"varint,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"` // 分片序号
}

func (x *PreSignMessage) Reset() {
	*x = PreSignMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadfile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreSignMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSignMessage) ProtoMessage() {}

func (x *PreSignMessage) ProtoReflect() protoreflect.Message {
	mi := &file_uploadfile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSignMessage.ProtoReflect.Descriptor instead.
func (*PreSignMessage) Descriptor() ([]byte, []int) {
	return file_uploadfile_proto_rawDescGZIP(), []int{2}
}

func (x *PreSignMessage) GetPresignUrl() string {
	if x != nil {
		return x.PresignUrl
	}
	return ""
}

func (x *PreSignMessage) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

type PartsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartNumber int32  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"` // 分片序号
	Etag       string `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`                                // 分片的 Etag
}

func (x *PartsMessage) Reset() {
	*x = PartsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadfile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartsMessage) ProtoMessage() {}

func (x *PartsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_uploadfile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartsMessage.ProtoReflect.Descriptor instead.
func (*PartsMessage) Descriptor() ([]byte, []int) {
	return file_uploadfile_proto_rawDescGZIP(), []int{3}
}

func (x *PartsMessage) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *PartsMessage) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

// 初始化信息
type InituploadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMd5   string `protobuf:"bytes,1,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`        // 文件MD5
	FileName  string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`     // 文件名称
	FileSize  int64  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`    // 文件大小
	IsChunked bool   `protobuf:"varint,4,opt,name=is_chunked,json=isChunked,proto3" json:"is_chunked,omitempty"` // 是否分片
	ChunkSize int64  `protobuf:"varint,5,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"` // 分片大小
}

func (x *InituploadFileRequest) Reset() {
	*x = InituploadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadfile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InituploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InituploadFileRequest) ProtoMessage() {}

func (x *InituploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uploadfile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InituploadFileRequest.ProtoReflect.Descriptor instead.
func (*InituploadFileRequest) Descriptor() ([]byte, []int) {
	return file_uploadfile_proto_rawDescGZIP(), []int{4}
}

func (x *InituploadFileRequest) GetFileMd5() string {
	if x != nil {
		return x.FileMd5
	}
	return ""
}

func (x *InituploadFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *InituploadFileRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *InituploadFileRequest) GetIsChunked() bool {
	if x != nil {
		return x.IsChunked
	}
	return false
}

func (x *InituploadFileRequest) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type InituploadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parts   []*PartsMessage `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"` // PartsMessages 数组
	FileMd5 string          `protobuf:"bytes,2,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`
}

func (x *InituploadFileResponse) Reset() {
	*x = InituploadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadfile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InituploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InituploadFileResponse) ProtoMessage() {}

func (x *InituploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uploadfile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InituploadFileResponse.ProtoReflect.Descriptor instead.
func (*InituploadFileResponse) Descriptor() ([]byte, []int) {
	return file_uploadfile_proto_rawDescGZIP(), []int{5}
}

func (x *InituploadFileResponse) GetParts() []*PartsMessage {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *InituploadFileResponse) GetFileMd5() string {
	if x != nil {
		return x.FileMd5
	}
	return ""
}

var File_uploadfile_proto protoreflect.FileDescriptor

var file_uploadfile_proto_rawDesc = []byte{
	0x0a, 0x10, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xa4,
	0x01, 0x0a, 0x0f, 0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x33, 0x0a, 0x10, 0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x66, 0x61, 0x73, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x46, 0x61, 0x73, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x52, 0x0a, 0x0e, 0x50, 0x72,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x43,
	0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x74, 0x61, 0x67, 0x22, 0xaa, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x69, 0x74, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x65,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x63, 0x0a, 0x16, 0x49, 0x6e, 0x69, 0x74, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x64, 0x35, 0x32, 0xbb, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x46,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x49, 0x6e, 0x69, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x53, 0x32, 0x34, 0x30, 0x2f, 0x41, 0x65, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x66, 0x69, 0x6c,
	0x65, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uploadfile_proto_rawDescOnce sync.Once
	file_uploadfile_proto_rawDescData = file_uploadfile_proto_rawDesc
)

func file_uploadfile_proto_rawDescGZIP() []byte {
	file_uploadfile_proto_rawDescOnce.Do(func() {
		file_uploadfile_proto_rawDescData = protoimpl.X.CompressGZIP(file_uploadfile_proto_rawDescData)
	})
	return file_uploadfile_proto_rawDescData
}

var file_uploadfile_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_uploadfile_proto_goTypes = []interface{}{
	(*FastLoadRequest)(nil),        // 0: uploadfile.FastLoadRequest
	(*FastLoadResponse)(nil),       // 1: uploadfile.FastLoadResponse
	(*PreSignMessage)(nil),         // 2: uploadfile.PreSignMessage
	(*PartsMessage)(nil),           // 3: uploadfile.PartsMessage
	(*InituploadFileRequest)(nil),  // 4: uploadfile.InituploadFileRequest
	(*InituploadFileResponse)(nil), // 5: uploadfile.InituploadFileResponse
}
var file_uploadfile_proto_depIdxs = []int32{
	3, // 0: uploadfile.InituploadFileResponse.parts:type_name -> uploadfile.PartsMessage
	0, // 1: uploadfile.UploadFileService.FastLoadFile:input_type -> uploadfile.FastLoadRequest
	4, // 2: uploadfile.UploadFileService.InitUploadFile:input_type -> uploadfile.InituploadFileRequest
	1, // 3: uploadfile.UploadFileService.FastLoadFile:output_type -> uploadfile.FastLoadResponse
	5, // 4: uploadfile.UploadFileService.InitUploadFile:output_type -> uploadfile.InituploadFileResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_uploadfile_proto_init() }
func file_uploadfile_proto_init() {
	if File_uploadfile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uploadfile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastLoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadfile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastLoadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadfile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreSignMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadfile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadfile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InituploadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadfile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InituploadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uploadfile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uploadfile_proto_goTypes,
		DependencyIndexes: file_uploadfile_proto_depIdxs,
		MessageInfos:      file_uploadfile_proto_msgTypes,
	}.Build()
	File_uploadfile_proto = out.File
	file_uploadfile_proto_rawDesc = nil
	file_uploadfile_proto_goTypes = nil
	file_uploadfile_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.9.1. DO NOT EDIT.

type UploadFileService interface {
	FastLoadFile(ctx context.Context, req *FastLoadRequest) (res *FastLoadResponse, err error)
	InitUploadFile(ctx context.Context, req *InituploadFileRequest) (res *InituploadFileResponse, err error)
}
